// Automatically generated by Godot Rust Tools; do not modify.
#![cfg_attr(any(), rustfmt::skip)]
#![allow(unused)]

pub mod input_actions {
    pub const UI_ACCEPT: &str = "ui_accept";
    pub const UI_SELECT: &str = "ui_select";
    pub const UI_CANCEL: &str = "ui_cancel";
    pub const UI_FOCUS_NEXT: &str = "ui_focus_next";
    pub const UI_FOCUS_PREV: &str = "ui_focus_prev";
    pub const UI_LEFT: &str = "ui_left";
    pub const UI_RIGHT: &str = "ui_right";
    pub const UI_UP: &str = "ui_up";
    pub const UI_DOWN: &str = "ui_down";
    pub const UI_PAGE_UP: &str = "ui_page_up";
    pub const UI_PAGE_DOWN: &str = "ui_page_down";
    pub const UI_HOME: &str = "ui_home";
    pub const UI_END: &str = "ui_end";
    pub const UI_ACCESSIBILITY_DRAG_AND_DROP: &str = "ui_accessibility_drag_and_drop";
    pub const UI_CUT: &str = "ui_cut";
    pub const UI_COPY: &str = "ui_copy";
    pub const UI_FOCUS_MODE: &str = "ui_focus_mode";
    pub const UI_PASTE: &str = "ui_paste";
    pub const UI_UNDO: &str = "ui_undo";
    pub const UI_REDO: &str = "ui_redo";
    pub const UI_TEXT_COMPLETION_QUERY: &str = "ui_text_completion_query";
    pub const UI_TEXT_COMPLETION_ACCEPT: &str = "ui_text_completion_accept";
    pub const UI_TEXT_COMPLETION_REPLACE: &str = "ui_text_completion_replace";
    pub const UI_TEXT_NEWLINE: &str = "ui_text_newline";
    pub const UI_TEXT_NEWLINE_BLANK: &str = "ui_text_newline_blank";
    pub const UI_TEXT_NEWLINE_ABOVE: &str = "ui_text_newline_above";
    pub const UI_TEXT_INDENT: &str = "ui_text_indent";
    pub const UI_TEXT_DEDENT: &str = "ui_text_dedent";
    pub const UI_TEXT_BACKSPACE: &str = "ui_text_backspace";
    pub const UI_TEXT_BACKSPACE_WORD: &str = "ui_text_backspace_word";
    pub const UI_TEXT_BACKSPACE_WORD_MACOS: &str = "ui_text_backspace_word.macos";
    pub const UI_TEXT_BACKSPACE_ALL_TO_LEFT: &str = "ui_text_backspace_all_to_left";
    pub const UI_TEXT_BACKSPACE_ALL_TO_LEFT_MACOS: &str = "ui_text_backspace_all_to_left.macos";
    pub const UI_TEXT_DELETE: &str = "ui_text_delete";
    pub const UI_TEXT_DELETE_WORD: &str = "ui_text_delete_word";
    pub const UI_TEXT_DELETE_WORD_MACOS: &str = "ui_text_delete_word.macos";
    pub const UI_TEXT_DELETE_ALL_TO_RIGHT: &str = "ui_text_delete_all_to_right";
    pub const UI_TEXT_DELETE_ALL_TO_RIGHT_MACOS: &str = "ui_text_delete_all_to_right.macos";
    pub const UI_TEXT_CARET_LEFT: &str = "ui_text_caret_left";
    pub const UI_TEXT_CARET_WORD_LEFT: &str = "ui_text_caret_word_left";
    pub const UI_TEXT_CARET_WORD_LEFT_MACOS: &str = "ui_text_caret_word_left.macos";
    pub const UI_TEXT_CARET_RIGHT: &str = "ui_text_caret_right";
    pub const UI_TEXT_CARET_WORD_RIGHT: &str = "ui_text_caret_word_right";
    pub const UI_TEXT_CARET_WORD_RIGHT_MACOS: &str = "ui_text_caret_word_right.macos";
    pub const UI_TEXT_CARET_UP: &str = "ui_text_caret_up";
    pub const UI_TEXT_CARET_DOWN: &str = "ui_text_caret_down";
    pub const UI_TEXT_CARET_LINE_START: &str = "ui_text_caret_line_start";
    pub const UI_TEXT_CARET_LINE_START_MACOS: &str = "ui_text_caret_line_start.macos";
    pub const UI_TEXT_CARET_LINE_END: &str = "ui_text_caret_line_end";
    pub const UI_TEXT_CARET_LINE_END_MACOS: &str = "ui_text_caret_line_end.macos";
    pub const UI_TEXT_CARET_PAGE_UP: &str = "ui_text_caret_page_up";
    pub const UI_TEXT_CARET_PAGE_DOWN: &str = "ui_text_caret_page_down";
    pub const UI_TEXT_CARET_DOCUMENT_START: &str = "ui_text_caret_document_start";
    pub const UI_TEXT_CARET_DOCUMENT_START_MACOS: &str = "ui_text_caret_document_start.macos";
    pub const UI_TEXT_CARET_DOCUMENT_END: &str = "ui_text_caret_document_end";
    pub const UI_TEXT_CARET_DOCUMENT_END_MACOS: &str = "ui_text_caret_document_end.macos";
    pub const UI_TEXT_CARET_ADD_BELOW: &str = "ui_text_caret_add_below";
    pub const UI_TEXT_CARET_ADD_BELOW_MACOS: &str = "ui_text_caret_add_below.macos";
    pub const UI_TEXT_CARET_ADD_ABOVE: &str = "ui_text_caret_add_above";
    pub const UI_TEXT_CARET_ADD_ABOVE_MACOS: &str = "ui_text_caret_add_above.macos";
    pub const UI_TEXT_SCROLL_UP: &str = "ui_text_scroll_up";
    pub const UI_TEXT_SCROLL_UP_MACOS: &str = "ui_text_scroll_up.macos";
    pub const UI_TEXT_SCROLL_DOWN: &str = "ui_text_scroll_down";
    pub const UI_TEXT_SCROLL_DOWN_MACOS: &str = "ui_text_scroll_down.macos";
    pub const UI_TEXT_SELECT_ALL: &str = "ui_text_select_all";
    pub const UI_TEXT_SELECT_WORD_UNDER_CARET: &str = "ui_text_select_word_under_caret";
    pub const UI_TEXT_SELECT_WORD_UNDER_CARET_MACOS: &str = "ui_text_select_word_under_caret.macos";
    pub const UI_TEXT_ADD_SELECTION_FOR_NEXT_OCCURRENCE: &str = "ui_text_add_selection_for_next_occurrence";
    pub const UI_TEXT_SKIP_SELECTION_FOR_NEXT_OCCURRENCE: &str = "ui_text_skip_selection_for_next_occurrence";
    pub const UI_TEXT_CLEAR_CARETS_AND_SELECTION: &str = "ui_text_clear_carets_and_selection";
    pub const UI_TEXT_TOGGLE_INSERT_MODE: &str = "ui_text_toggle_insert_mode";
    pub const UI_MENU: &str = "ui_menu";
    pub const UI_TEXT_SUBMIT: &str = "ui_text_submit";
    pub const UI_UNICODE_START: &str = "ui_unicode_start";
    pub const UI_GRAPH_DUPLICATE: &str = "ui_graph_duplicate";
    pub const UI_GRAPH_DELETE: &str = "ui_graph_delete";
    pub const UI_GRAPH_FOLLOW_LEFT: &str = "ui_graph_follow_left";
    pub const UI_GRAPH_FOLLOW_LEFT_MACOS: &str = "ui_graph_follow_left.macos";
    pub const UI_GRAPH_FOLLOW_RIGHT: &str = "ui_graph_follow_right";
    pub const UI_GRAPH_FOLLOW_RIGHT_MACOS: &str = "ui_graph_follow_right.macos";
    pub const UI_FILEDIALOG_UP_ONE_LEVEL: &str = "ui_filedialog_up_one_level";
    pub const UI_FILEDIALOG_REFRESH: &str = "ui_filedialog_refresh";
    pub const UI_FILEDIALOG_SHOW_HIDDEN: &str = "ui_filedialog_show_hidden";
    pub const UI_SWAP_INPUT_DIRECTION: &str = "ui_swap_input_direction";
    pub const UI_COLORPICKER_DELETE_PRESET: &str = "ui_colorpicker_delete_preset";
    pub const SOME_ACTION: &str = "some action";
    pub const ADF: &str = "adf";
}

pub mod groups {
    pub const SOME_TEST_GROUP: &str = "some test group";
}

pub mod render_2d_layers {
    pub const REN_DER_ER: u32 = 0;
}

pub mod render_3d_layers {
    pub const RENDER_3D: u32 = 0;
}

pub mod physics_2d_layers {
    pub const MY_COOL_LAYER_NAME_OR_SOMETHING: u32 = 0;
}

pub mod physics_3d_layers {
    pub const MY_COOL_PHYSICS_LAYER: u32 = 0;
    pub const MY_OTHER_EQUALLY_COOL_PHYSICS_LAYER: u32 = 1;
}

pub mod navigation_3d_layers {
    pub const NAVIGATION_LAYER_I_GUESS: u32 = 0;
}

pub mod avoidance_layers {
    pub const AVOIDANCE_LAYER_A: u32 = 0;
}
